/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/hello": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 挨拶API
         * @description シンプルな挨拶メッセージを返すエンドポイント
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 挨拶メッセージを返します */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 挨拶メッセージ
                             * @example Hello from Hono API!
                             */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * テスト一覧取得API
         * @description データベースに保存されているテストデータの一覧を取得します
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description テスト一覧を返します */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            tests: {
                                /**
                                 * @description テストID (UUID)
                                 * @example 550e8400-e29b-41d4-a716-446655440000
                                 */
                                id: string;
                                /**
                                 * @description テスト内容
                                 * @example テストメッセージ
                                 */
                                text: string;
                                /**
                                 * Format: date-time
                                 * @description 作成日時
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description 更新日時
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * テスト作成API
         * @description 新しいテストデータをデータベースに作成します
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description 作成するテスト内容
                         * @example 新しいテストメッセージ
                         */
                        text: string;
                    };
                };
            };
            responses: {
                /** @description テストデータが正常に作成されました */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description 作成完了メッセージ
                             * @example created
                             */
                            message: string;
                            test: {
                                /**
                                 * @description テストID (UUID)
                                 * @example 550e8400-e29b-41d4-a716-446655440000
                                 */
                                id: string;
                                /**
                                 * @description テスト内容
                                 * @example テストメッセージ
                                 */
                                text: string;
                                /**
                                 * Format: date-time
                                 * @description 作成日時
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description 更新日時
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
